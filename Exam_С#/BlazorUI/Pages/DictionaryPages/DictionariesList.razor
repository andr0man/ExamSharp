@page "/dictionary"

<h3>DictionariesList</h3>

@if (Dictionaries.Count == 0)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <SearchBox Items="Dictionaries.ToList()" OnSearch="UpdateFilteredDictionaries"></SearchBox>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Тип</th>
                <th>Дії</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var D in FilteredDictionaries)
            {
                <tr>
                    <td>@D.Id</td>
                    <td>
                        @if (editDictionary?.Id == D.Id)
                        {
                            <input @bind="editDictionary.Type" class="form-control" />
                        }
                        else
                        {
                            <a href="@($"dictionary/{D.Id}")">@D.Type</a>
                        }
                    </td>
                    <td>
                        @if (editDictionary?.Id == D.Id)
                        {
                            <button class="btn btn-success" @onclick="UpdateDictionary">Зберегти</button>
                            <button class="btn btn-secondary" @onclick="CancelEdit">Скасувати</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" @onclick="() => EditDictionary(D)">Редагувати</button>
                            <button class="btn btn-danger" @onclick="() => ConfirmDelete(D.Id)">Видалити</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (isAddingNewDictionary)
    {
        <div class="mb-3 d-flex justify-content-center gap-2 align-items-center">
            <input @bind="newDictionary.Type" class="form-control" placeholder="Тип нового словника" />
            <button class="btn btn-success" @onclick="SaveNewDictionary">Зберегти</button>
            <button class="btn btn-secondary" @onclick="CancelAdd">Скасувати</button>
        </div>
    }
    else
    {
        <button class="btn btn-primary" @onclick="ShowAddNewDictionary">Додати</button>
    }
}



@code {
    private List<MyDictionary> Dictionaries = new List<MyDictionary>();
    private List<MyDictionary> FilteredDictionaries = new List<MyDictionary>();
    private MyDictionary newDictionary = new MyDictionary();
    private MyDictionary editDictionary;
    private bool isAddingNewDictionary = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadDictionaries();
    }

    private async Task LoadDictionaries()
    {
        Dictionaries = await DictionaryService.GetAllAsync();
        FilteredDictionaries = Dictionaries;
    }

    private void ShowAddNewDictionary()
    {
        isAddingNewDictionary = true;
    }

    private async Task SaveNewDictionary()
    {
        await DictionaryService.AddAsync(newDictionary);
        newDictionary = new MyDictionary();
        isAddingNewDictionary = false;
        await LoadDictionaries();
    }

    private void CancelAdd()
    {
        newDictionary = new MyDictionary();
        isAddingNewDictionary = false;
    }

    private void EditDictionary(MyDictionary myDictionary)
    {
        editDictionary = new MyDictionary
            {
                Id = myDictionary.Id,
                Type = myDictionary.Type
            };
    }

    private async Task UpdateDictionary()
    {
        await DictionaryService.UpdateAsync(editDictionary);
        editDictionary = null;
        await LoadDictionaries();
    }

    private void CancelEdit()
    {
        editDictionary = null;
    }

    private async Task Delete(int id)
    {
        await DictionaryService.DeleteAsync(id);
        await LoadDictionaries();
    }

    private async Task ConfirmDelete(int id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Ви впевнені, що хочете видалити цей словник?" });
        if (confirmed)
        {
            await Delete(id);
        }
    }

    private void UpdateFilteredDictionaries(string searchTerm)
    {
        if (Dictionaries == null)
        {
            FilteredDictionaries = new List<MyDictionary>();
            return;
        }

        if (string.IsNullOrEmpty(searchTerm))
        {
            FilteredDictionaries = Dictionaries.ToList();
        }
        else
        {
            FilteredDictionaries = Dictionaries
                .Where(x => x.Type.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}
